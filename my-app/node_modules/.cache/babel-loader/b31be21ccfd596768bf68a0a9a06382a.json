{"ast":null,"code":"let ADD_POST = \"ADD-POST\";\nlet UPDATE;\nlet store = {\n  _state: {\n    NewsPage: {\n      NewsData: [{\n        post: \"всё гуд\"\n      }, {\n        post: \"всё супер гуд\"\n      }, {\n        post: \"всё мега класс\"\n      }, {\n        post: \"всё мега класс\"\n      }],\n      newPostText: ''\n    },\n    MessagesPage: {\n      MessagesData: [{\n        id: 1,\n        message: \"здарова чепушня\"\n      }, {\n        id: 2,\n        message: \"здарова качеля\"\n      }],\n      DialogsData: [{\n        id: 1,\n        name: \"Андрей\"\n      }, {\n        id: 2,\n        name: \"Артём\"\n      }, {\n        id: 3,\n        name: \"Егор\"\n      }, {\n        id: 5,\n        name: \"Вадим\"\n      }, {\n        id: 6,\n        name: \"Ваня\"\n      }, {\n        id: 7,\n        name: \"хз какой-то ноунейм\"\n      }, {\n        id: 8,\n        name: \"хз какой-то ноунейм\"\n      }]\n    }\n  },\n\n  rerernderEntireTree() {\n    console.log(\"hello\");\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._rerernderEntireTree = observer;\n  },\n\n  dispatch(action) {\n    debugger;\n\n    if (action.type === \"ADD-POST\") {\n      let newPost = {\n        post: this._state.NewsPage.newPostText\n      };\n\n      this._state.NewsPage.NewsData.push(newPost);\n\n      this._state.NewsPage.newPostText = \"\";\n\n      this._rerernderEntireTree(this._state);\n    } else if (action.type === \"UPDATE-POST\") {\n      this._state.NewsPage.newPostText = action.newText;\n\n      this._rerernderEntireTree(this._state);\n    }\n  }\n\n};\nexport let addPostActionCreaotor = () => ({\n  type: \"ADD-POST\"\n});\nexport let updateNewPostTextActionCreator = text => ({\n  type: \"UPDATE-POST\",\n  newText: text\n});\nexport default store;","map":{"version":3,"names":["ADD_POST","UPDATE","store","_state","NewsPage","NewsData","post","newPostText","MessagesPage","MessagesData","id","message","DialogsData","name","rerernderEntireTree","console","log","getState","subscribe","observer","_rerernderEntireTree","dispatch","action","type","newPost","push","newText","addPostActionCreaotor","updateNewPostTextActionCreator","text"],"sources":["E:/Work/programming228/web/react-primer/my-app/src/redux/state.js"],"sourcesContent":["let ADD_POST=\"ADD-POST\"\r\nlet UPDATE\r\n\r\nlet store={\r\n   _state:{\r\n    NewsPage:{\r\n      NewsData:[\r\n        {post:\"всё гуд\"},\r\n        {post:\"всё супер гуд\"},\r\n        {post:\"всё мега класс\"},\r\n        {post:\"всё мега класс\"},\r\n      ], \r\n      newPostText:''  \r\n    },\r\n    MessagesPage:{\r\n        MessagesData:[\r\n            {id:1,message:\"здарова чепушня\"},\r\n            {id:2,message:\"здарова качеля\"},\r\n          ],\r\n          DialogsData:[\r\n            {id:1,name:\"Андрей\"},\r\n            {id:2,name:\"Артём\"},\r\n            {id:3,name:\"Егор\"},\r\n            {id:5,name:\"Вадим\"},\r\n            {id:6,name:\"Ваня\"},\r\n            {id:7,name:\"хз какой-то ноунейм\"},\r\n            {id:8,name:\"хз какой-то ноунейм\"},\r\n          ]\r\n    }\r\n  },\r\n rerernderEntireTree(){\r\n    console.log(\"hello\")\r\n  },\r\n  getState(){\r\n    return this._state\r\n  },\r\n  subscribe(observer){\r\n    this._rerernderEntireTree=observer\r\n  },\r\n  dispatch(action){\r\n    debugger;\r\n    if(action.type===\"ADD-POST\"){\r\n      let newPost={\r\n        post:this._state.NewsPage.newPostText,\r\n      }\r\n      this._state.NewsPage.NewsData.push(newPost);\r\n      this._state.NewsPage.newPostText=\"\";\r\n      this._rerernderEntireTree(this._state);\r\n    }\r\n    else if(action.type===\"UPDATE-POST\"){\r\n      this._state.NewsPage.newPostText=action.newText;\r\n      this._rerernderEntireTree(this._state);\r\n    }\r\n    }\r\n  }\r\n\r\nexport let addPostActionCreaotor=()=>({\r\n    type:\"ADD-POST\"    \r\n})\r\n\r\n export let updateNewPostTextActionCreator=(text)=>({\r\n    type:\"UPDATE-POST\",newText:text\r\n})\r\n\r\n\r\n\r\n  export default store"],"mappings":"AAAA,IAAIA,QAAQ,GAAC,UAAb;AACA,IAAIC,MAAJ;AAEA,IAAIC,KAAK,GAAC;EACPC,MAAM,EAAC;IACNC,QAAQ,EAAC;MACPC,QAAQ,EAAC,CACP;QAACC,IAAI,EAAC;MAAN,CADO,EAEP;QAACA,IAAI,EAAC;MAAN,CAFO,EAGP;QAACA,IAAI,EAAC;MAAN,CAHO,EAIP;QAACA,IAAI,EAAC;MAAN,CAJO,CADF;MAOPC,WAAW,EAAC;IAPL,CADH;IAUNC,YAAY,EAAC;MACTC,YAAY,EAAC,CACT;QAACC,EAAE,EAAC,CAAJ;QAAMC,OAAO,EAAC;MAAd,CADS,EAET;QAACD,EAAE,EAAC,CAAJ;QAAMC,OAAO,EAAC;MAAd,CAFS,CADJ;MAKPC,WAAW,EAAC,CACV;QAACF,EAAE,EAAC,CAAJ;QAAMG,IAAI,EAAC;MAAX,CADU,EAEV;QAACH,EAAE,EAAC,CAAJ;QAAMG,IAAI,EAAC;MAAX,CAFU,EAGV;QAACH,EAAE,EAAC,CAAJ;QAAMG,IAAI,EAAC;MAAX,CAHU,EAIV;QAACH,EAAE,EAAC,CAAJ;QAAMG,IAAI,EAAC;MAAX,CAJU,EAKV;QAACH,EAAE,EAAC,CAAJ;QAAMG,IAAI,EAAC;MAAX,CALU,EAMV;QAACH,EAAE,EAAC,CAAJ;QAAMG,IAAI,EAAC;MAAX,CANU,EAOV;QAACH,EAAE,EAAC,CAAJ;QAAMG,IAAI,EAAC;MAAX,CAPU;IALL;EAVP,CADA;;EA2BTC,mBAAmB,GAAE;IAClBC,OAAO,CAACC,GAAR,CAAY,OAAZ;EACD,CA7BO;;EA8BRC,QAAQ,GAAE;IACR,OAAO,KAAKd,MAAZ;EACD,CAhCO;;EAiCRe,SAAS,CAACC,QAAD,EAAU;IACjB,KAAKC,oBAAL,GAA0BD,QAA1B;EACD,CAnCO;;EAoCRE,QAAQ,CAACC,MAAD,EAAQ;IACd;;IACA,IAAGA,MAAM,CAACC,IAAP,KAAc,UAAjB,EAA4B;MAC1B,IAAIC,OAAO,GAAC;QACVlB,IAAI,EAAC,KAAKH,MAAL,CAAYC,QAAZ,CAAqBG;MADhB,CAAZ;;MAGA,KAAKJ,MAAL,CAAYC,QAAZ,CAAqBC,QAArB,CAA8BoB,IAA9B,CAAmCD,OAAnC;;MACA,KAAKrB,MAAL,CAAYC,QAAZ,CAAqBG,WAArB,GAAiC,EAAjC;;MACA,KAAKa,oBAAL,CAA0B,KAAKjB,MAA/B;IACD,CAPD,MAQK,IAAGmB,MAAM,CAACC,IAAP,KAAc,aAAjB,EAA+B;MAClC,KAAKpB,MAAL,CAAYC,QAAZ,CAAqBG,WAArB,GAAiCe,MAAM,CAACI,OAAxC;;MACA,KAAKN,oBAAL,CAA0B,KAAKjB,MAA/B;IACD;EACA;;AAlDK,CAAV;AAqDA,OAAO,IAAIwB,qBAAqB,GAAC,OAAK;EAClCJ,IAAI,EAAC;AAD6B,CAAL,CAA1B;AAIN,OAAO,IAAIK,8BAA8B,GAAEC,IAAD,KAAS;EAChDN,IAAI,EAAC,aAD2C;EAC7BG,OAAO,EAACG;AADqB,CAAT,CAAnC;AAMN,eAAe3B,KAAf"},"metadata":{},"sourceType":"module"}