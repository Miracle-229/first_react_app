{"ast":null,"code":"let store = {\n  _state: {\n    NewsPage: {\n      NewsData: [{\n        post: \"всё гуд\"\n      }, {\n        post: \"всё супер гуд\"\n      }, {\n        post: \"всё мега класс\"\n      }, {\n        post: \"всё мега класс\"\n      }],\n      newPostText: ''\n    },\n    MessagesPage: {\n      MessagesData: [{\n        id: 1,\n        message: \"здарова чепушня\"\n      }, {\n        id: 2,\n        message: \"здарова качеля\"\n      }],\n      DialogsData: [{\n        id: 1,\n        name: \"Андрей\"\n      }, {\n        id: 2,\n        name: \"Артём\"\n      }, {\n        id: 3,\n        name: \"Егор\"\n      }, {\n        id: 5,\n        name: \"Вадим\"\n      }, {\n        id: 6,\n        name: \"Ваня\"\n      }, {\n        id: 7,\n        name: \"хз какой-то ноунейм\"\n      }, {\n        id: 8,\n        name: \"хз какой-то ноунейм\"\n      }]\n    }\n  },\n\n  rerernderEntireTree() {\n    console.log(\"hello\");\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  addPost() {\n    let newPost = {\n      post: this._state.NewsPage.NewsData\n    };\n\n    this._state.NewsPage.NewsData.push(newPost);\n\n    this._state.this._rerernderEntireTree(this._state);\n  },\n\n  updateNewPostText(newText) {\n    this._state.NewsPage.newPostText = newText;\n\n    this._rerernderEntireTree(this._state);\n  },\n\n  subscribe(observer) {\n    this._rerernderEntireTree = observer;\n  },\n\n  dispatch(action) {\n    if (action.type === \"ADD-POST\") {\n      let newPost = {\n        post: postMessage\n      };\n\n      this._state.NewsPage.NewsData.push(newPost);\n\n      this._rerernderEntireTree(this._state);\n    } else if (action.type === \"UPDATE-POST\") {\n      this._state.NewsPage.newPostText = action.newText;\n\n      this._rerernderEntireTree(this._state);\n    }\n  }\n\n};\nexport default store;","map":{"version":3,"names":["store","_state","NewsPage","NewsData","post","newPostText","MessagesPage","MessagesData","id","message","DialogsData","name","rerernderEntireTree","console","log","getState","addPost","newPost","push","this","_rerernderEntireTree","updateNewPostText","newText","subscribe","observer","dispatch","action","type","postMessage"],"sources":["E:/Work/programming228/web/react-primer/my-app/src/redux/state.js"],"sourcesContent":["\r\nlet store={\r\n   _state:{\r\n    NewsPage:{\r\n      NewsData:[\r\n        {post:\"всё гуд\"},\r\n        {post:\"всё супер гуд\"},\r\n        {post:\"всё мега класс\"},\r\n        {post:\"всё мега класс\"},\r\n      ], \r\n      newPostText:''  \r\n    },\r\n    MessagesPage:{\r\n        MessagesData:[\r\n            {id:1,message:\"здарова чепушня\"},\r\n            {id:2,message:\"здарова качеля\"},\r\n          ],\r\n          DialogsData:[\r\n            {id:1,name:\"Андрей\"},\r\n            {id:2,name:\"Артём\"},\r\n            {id:3,name:\"Егор\"},\r\n            {id:5,name:\"Вадим\"},\r\n            {id:6,name:\"Ваня\"},\r\n            {id:7,name:\"хз какой-то ноунейм\"},\r\n            {id:8,name:\"хз какой-то ноунейм\"},\r\n          ]\r\n    }\r\n  },\r\n rerernderEntireTree(){\r\n    console.log(\"hello\")\r\n  },\r\n  getState(){\r\n    return this._state\r\n  },\r\n  addPost(){\r\n    let newPost={\r\n      post:this._state.NewsPage.NewsData,\r\n    }\r\n    this._state.NewsPage.NewsData.push(newPost);\r\n    this._state.\r\n    this._rerernderEntireTree(this._state);\r\n  },\r\n  updateNewPostText(newText){\r\n    this._state.NewsPage.newPostText=newText;\r\n    this._rerernderEntireTree(this._state);\r\n  },\r\n  subscribe(observer){\r\n    this._rerernderEntireTree=observer\r\n  },\r\n  dispatch(action){\r\n    if(action.type===\"ADD-POST\"){\r\n      let newPost={\r\n        post:postMessage,\r\n      }\r\n      this._state.NewsPage.NewsData.push(newPost);\r\n      this._rerernderEntireTree(this._state);\r\n    }\r\n    else if(action.type===\"UPDATE-POST\"){\r\n      this._state.NewsPage.newPostText=action.newText;\r\n      this._rerernderEntireTree(this._state);\r\n    }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  export default store"],"mappings":"AACA,IAAIA,KAAK,GAAC;EACPC,MAAM,EAAC;IACNC,QAAQ,EAAC;MACPC,QAAQ,EAAC,CACP;QAACC,IAAI,EAAC;MAAN,CADO,EAEP;QAACA,IAAI,EAAC;MAAN,CAFO,EAGP;QAACA,IAAI,EAAC;MAAN,CAHO,EAIP;QAACA,IAAI,EAAC;MAAN,CAJO,CADF;MAOPC,WAAW,EAAC;IAPL,CADH;IAUNC,YAAY,EAAC;MACTC,YAAY,EAAC,CACT;QAACC,EAAE,EAAC,CAAJ;QAAMC,OAAO,EAAC;MAAd,CADS,EAET;QAACD,EAAE,EAAC,CAAJ;QAAMC,OAAO,EAAC;MAAd,CAFS,CADJ;MAKPC,WAAW,EAAC,CACV;QAACF,EAAE,EAAC,CAAJ;QAAMG,IAAI,EAAC;MAAX,CADU,EAEV;QAACH,EAAE,EAAC,CAAJ;QAAMG,IAAI,EAAC;MAAX,CAFU,EAGV;QAACH,EAAE,EAAC,CAAJ;QAAMG,IAAI,EAAC;MAAX,CAHU,EAIV;QAACH,EAAE,EAAC,CAAJ;QAAMG,IAAI,EAAC;MAAX,CAJU,EAKV;QAACH,EAAE,EAAC,CAAJ;QAAMG,IAAI,EAAC;MAAX,CALU,EAMV;QAACH,EAAE,EAAC,CAAJ;QAAMG,IAAI,EAAC;MAAX,CANU,EAOV;QAACH,EAAE,EAAC,CAAJ;QAAMG,IAAI,EAAC;MAAX,CAPU;IALL;EAVP,CADA;;EA2BTC,mBAAmB,GAAE;IAClBC,OAAO,CAACC,GAAR,CAAY,OAAZ;EACD,CA7BO;;EA8BRC,QAAQ,GAAE;IACR,OAAO,KAAKd,MAAZ;EACD,CAhCO;;EAiCRe,OAAO,GAAE;IACP,IAAIC,OAAO,GAAC;MACVb,IAAI,EAAC,KAAKH,MAAL,CAAYC,QAAZ,CAAqBC;IADhB,CAAZ;;IAGA,KAAKF,MAAL,CAAYC,QAAZ,CAAqBC,QAArB,CAA8Be,IAA9B,CAAmCD,OAAnC;;IACA,KAAKhB,MAAL,CACAkB,IADA,CACKC,oBADL,CAC0B,KAAKnB,MAD/B;EAED,CAxCO;;EAyCRoB,iBAAiB,CAACC,OAAD,EAAS;IACxB,KAAKrB,MAAL,CAAYC,QAAZ,CAAqBG,WAArB,GAAiCiB,OAAjC;;IACA,KAAKF,oBAAL,CAA0B,KAAKnB,MAA/B;EACD,CA5CO;;EA6CRsB,SAAS,CAACC,QAAD,EAAU;IACjB,KAAKJ,oBAAL,GAA0BI,QAA1B;EACD,CA/CO;;EAgDRC,QAAQ,CAACC,MAAD,EAAQ;IACd,IAAGA,MAAM,CAACC,IAAP,KAAc,UAAjB,EAA4B;MAC1B,IAAIV,OAAO,GAAC;QACVb,IAAI,EAACwB;MADK,CAAZ;;MAGA,KAAK3B,MAAL,CAAYC,QAAZ,CAAqBC,QAArB,CAA8Be,IAA9B,CAAmCD,OAAnC;;MACA,KAAKG,oBAAL,CAA0B,KAAKnB,MAA/B;IACD,CAND,MAOK,IAAGyB,MAAM,CAACC,IAAP,KAAc,aAAjB,EAA+B;MAClC,KAAK1B,MAAL,CAAYC,QAAZ,CAAqBG,WAArB,GAAiCqB,MAAM,CAACJ,OAAxC;;MACA,KAAKF,oBAAL,CAA0B,KAAKnB,MAA/B;IACD;EACA;;AA5DK,CAAV;AAiEE,eAAeD,KAAf"},"metadata":{},"sourceType":"module"}