{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\programming228\\\\web\\\\react-primer\\\\my-app\\\\src\\\\Aside_Friends\\\\FriendsContainer.jsx\";\nimport { connect } from \"react-redux\";\nimport { follow, setCurrentPageActionCreator, setTooggleIsFatchingActionCreator, setUserActionCreator, setUsersTotalCountActionCreator, unfollowActionCreator } from \"../redux/friends-reducer\";\nimport AsideFriends from \"./Aside_Friends\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport loading from \"./Infinity-2s-223px.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet mapStateToProps = state => {\n  return {\n    FriendsData: state.FriendsPage.FriendsData,\n    pageSize: state.FriendsPage.pageSize,\n    totalUsersCount: state.FriendsPage.totalUsersCount,\n    currentPage: state.FriendsPage.currentPage,\n    isFetching: state.FriendsPage.isFetching\n  };\n}; // let mapDispatchToProps = (dispatch) => {\n//   return {\n//     follow: (userid) => {\n//       dispatch(followActionCreator(userid));\n//     },\n//     unfollow: (userid) => {\n//       dispatch(unfollowActionCreator(userid));\n//     },\n//     setUsers: (users) => {\n//       dispatch(setUserActionCreator(users));\n//     },\n//     setCurrentPage: (pageNumber) => {\n//       dispatch(setCurrentPageActionCreator(pageNumber));\n//     },\n//     setUsersTotalCount: (currentTotalUsers) => {\n//       dispatch(setUsersTotalCountActionCreator(currentTotalUsers));\n//     },\n//     setTooggleIsFatching: (isFatching) => {\n//       dispatch(setTooggleIsFatchingActionCreator(isFatching));\n//     },\n//   };\n// };\n\n\nclass FriendsApiContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onpageNumber = pageNumber => {\n      this.props.setTooggleIsFatching(true);\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`http://localhost:3001/data?_limit=${this.props.pageSize}&_page=${pageNumber}`).then(response => {\n        this.props.setTooggleIsFatching(false);\n        this.props.setUsers(response.data);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.setTooggleIsFatching(true);\n    axios.get(`http://localhost:3001/data?_limit=${this.props.pageSize}&_page=${this.props.currentPage}`).then(response => {\n      this.props.setTooggleIsFatching(false);\n      this.props.setUsers(response.data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"\",\n        src: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 34\n      }, this) : null, /*#__PURE__*/_jsxDEV(AsideFriends, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onpageNumber: this.onpageNumber,\n        FriendsData: this.props.FriendsData,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst FriendsContainer = connect(mapStateToProps, {\n  follow: follow,\n  unfollow: unfollowActionCreator,\n  setUsers: setUserActionCreator,\n  setCurrentPage: setCurrentPageActionCreator,\n  setUsersTotalCount: setUsersTotalCountActionCreator,\n  setTooggleIsFatching: setTooggleIsFatchingActionCreator\n})(FriendsApiContainer);\nexport default FriendsContainer;","map":{"version":3,"names":["connect","follow","setCurrentPageActionCreator","setTooggleIsFatchingActionCreator","setUserActionCreator","setUsersTotalCountActionCreator","unfollowActionCreator","AsideFriends","React","axios","loading","mapStateToProps","state","FriendsData","FriendsPage","pageSize","totalUsersCount","currentPage","isFetching","FriendsApiContainer","Component","onpageNumber","pageNumber","props","setTooggleIsFatching","setCurrentPage","get","then","response","setUsers","data","componentDidMount","render","unfollow","FriendsContainer","setUsersTotalCount"],"sources":["E:/Work/programming228/web/react-primer/my-app/src/Aside_Friends/FriendsContainer.jsx"],"sourcesContent":["import { connect } from \"react-redux\";\r\nimport {\r\n  follow,\r\n  setCurrentPageActionCreator,\r\n  setTooggleIsFatchingActionCreator,\r\n  setUserActionCreator,\r\n  setUsersTotalCountActionCreator,\r\n  unfollowActionCreator,\r\n} from \"../redux/friends-reducer\";\r\nimport AsideFriends from \"./Aside_Friends\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport loading from \"./Infinity-2s-223px.gif\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    FriendsData: state.FriendsPage.FriendsData,\r\n    pageSize: state.FriendsPage.pageSize,\r\n    totalUsersCount: state.FriendsPage.totalUsersCount,\r\n    currentPage: state.FriendsPage.currentPage,\r\n    isFetching: state.FriendsPage.isFetching,\r\n  };\r\n};\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     follow: (userid) => {\r\n//       dispatch(followActionCreator(userid));\r\n//     },\r\n//     unfollow: (userid) => {\r\n//       dispatch(unfollowActionCreator(userid));\r\n//     },\r\n//     setUsers: (users) => {\r\n//       dispatch(setUserActionCreator(users));\r\n//     },\r\n//     setCurrentPage: (pageNumber) => {\r\n//       dispatch(setCurrentPageActionCreator(pageNumber));\r\n//     },\r\n//     setUsersTotalCount: (currentTotalUsers) => {\r\n//       dispatch(setUsersTotalCountActionCreator(currentTotalUsers));\r\n//     },\r\n//     setTooggleIsFatching: (isFatching) => {\r\n//       dispatch(setTooggleIsFatchingActionCreator(isFatching));\r\n//     },\r\n//   };\r\n// };\r\nclass FriendsApiContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.setTooggleIsFatching(true);\r\n    axios\r\n      .get(\r\n        `http://localhost:3001/data?_limit=${this.props.pageSize}&_page=${this.props.currentPage}`\r\n      )\r\n      .then((response) => {\r\n        this.props.setTooggleIsFatching(false);\r\n        this.props.setUsers(response.data);\r\n      });\r\n  }\r\n  onpageNumber = (pageNumber) => {\r\n    this.props.setTooggleIsFatching(true);\r\n    this.props.setCurrentPage(pageNumber);\r\n    axios\r\n      .get(\r\n        `http://localhost:3001/data?_limit=${this.props.pageSize}&_page=${pageNumber}`\r\n      )\r\n      .then((response) => {\r\n        this.props.setTooggleIsFatching(false);\r\n        this.props.setUsers(response.data);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <img alt=\"\" src={loading} /> : null}\r\n        <AsideFriends\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onpageNumber={this.onpageNumber}\r\n          FriendsData={this.props.FriendsData}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n        ></AsideFriends>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst FriendsContainer = connect(mapStateToProps, {\r\n  follow: follow,\r\n  unfollow: unfollowActionCreator,\r\n  setUsers:setUserActionCreator,\r\n  setCurrentPage:setCurrentPageActionCreator,\r\n  setUsersTotalCount:setUsersTotalCountActionCreator,\r\n  setTooggleIsFatching:setTooggleIsFatchingActionCreator\r\n\r\n})(FriendsApiContainer);\r\n\r\nexport default FriendsContainer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}