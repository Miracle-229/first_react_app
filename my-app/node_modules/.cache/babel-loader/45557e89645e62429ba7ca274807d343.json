{"ast":null,"code":"let ADD_POST = \"ADD-POST\";\nlet UPDATE_POST = \"UPDATE-POST\";\nlet initialState = {\n  NewsData: [{\n    post: \"всё гуд\"\n  }, {\n    post: \"всё супер гуд\"\n  }, {\n    post: \"всё мега класс\"\n  }, {\n    post: \"всё мега класс\"\n  }],\n  newPostText: ''\n};\n\nconst newsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          post: state.newPostText\n        };\n        let stateCopy = { ...state,\n          newPostText: \"\",\n          NewsData: [...state.NewsData, newPost]\n        }; // stateCopy.NewsData=[...state.NewsData]\n        // stateCopy.NewsData.push(newPost);\n        // stateCopy.newPostText = \"\";\n\n        return stateCopy;\n      }\n\n    case UPDATE_POST:\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.NewsData = [...state.NewsData];\n        stateCopy.newPostText = action.newText;\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport let addPostActionCreaotor = () => ({\n  type: ADD_POST\n});\nexport let updateNewPostTextActionCreator = text => ({\n  type: UPDATE_POST,\n  newText: text\n});\nexport default newsReducer;","map":{"version":3,"names":["ADD_POST","UPDATE_POST","initialState","NewsData","post","newPostText","newsReducer","state","action","type","newPost","stateCopy","newText","addPostActionCreaotor","updateNewPostTextActionCreator","text"],"sources":["E:/Work/programming228/web/react-primer/my-app/src/redux/news-reducer.js"],"sourcesContent":["let ADD_POST = \"ADD-POST\";\r\nlet UPDATE_POST = \"UPDATE-POST\";\r\n\r\nlet initialState= {\r\n    NewsData:[\r\n      {post:\"всё гуд\"},\r\n      {post:\"всё супер гуд\"},\r\n      {post:\"всё мега класс\"},\r\n      {post:\"всё мега класс\"},\r\n    ], \r\n    newPostText:'' \r\n}\r\n\r\nconst newsReducer = (state=initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:{\r\n      let newPost = {\r\n        post: state.newPostText,\r\n      };\r\n      let stateCopy={\r\n        ...state,\r\n        newPostText:\"\",\r\n        NewsData:[...state.NewsData,newPost]\r\n      };\r\n      // stateCopy.NewsData=[...state.NewsData]\r\n      // stateCopy.NewsData.push(newPost);\r\n      // stateCopy.newPostText = \"\";\r\n      return stateCopy;\r\n    }\r\n    case UPDATE_POST:{\r\n      let stateCopy={\r\n        ...state,\r\n        \r\n      };\r\n      stateCopy.NewsData=[...state.NewsData]\r\n      stateCopy.newPostText = action.newText;\r\n      return stateCopy;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport let addPostActionCreaotor=()=>({\r\n  type:ADD_POST   \r\n})\r\nexport let updateNewPostTextActionCreator=(text)=>({\r\n  type:UPDATE_POST,newText:text\r\n})\r\n\r\nexport default newsReducer;\r\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAG,UAAf;AACA,IAAIC,WAAW,GAAG,aAAlB;AAEA,IAAIC,YAAY,GAAE;EACdC,QAAQ,EAAC,CACP;IAACC,IAAI,EAAC;EAAN,CADO,EAEP;IAACA,IAAI,EAAC;EAAN,CAFO,EAGP;IAACA,IAAI,EAAC;EAAN,CAHO,EAIP;IAACA,IAAI,EAAC;EAAN,CAJO,CADK;EAOdC,WAAW,EAAC;AAPE,CAAlB;;AAUA,MAAMC,WAAW,GAAG,YAAgC;EAAA,IAA/BC,KAA+B,uEAAzBL,YAAyB;EAAA,IAAXM,MAAW;;EAClD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKT,QAAL;MAAc;QACZ,IAAIU,OAAO,GAAG;UACZN,IAAI,EAAEG,KAAK,CAACF;QADA,CAAd;QAGA,IAAIM,SAAS,GAAC,EACZ,GAAGJ,KADS;UAEZF,WAAW,EAAC,EAFA;UAGZF,QAAQ,EAAC,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAmBO,OAAnB;QAHG,CAAd,CAJY,CASZ;QACA;QACA;;QACA,OAAOC,SAAP;MACD;;IACD,KAAKV,WAAL;MAAiB;QACf,IAAIU,SAAS,GAAC,EACZ,GAAGJ;QADS,CAAd;QAIAI,SAAS,CAACR,QAAV,GAAmB,CAAC,GAAGI,KAAK,CAACJ,QAAV,CAAnB;QACAQ,SAAS,CAACN,WAAV,GAAwBG,MAAM,CAACI,OAA/B;QACA,OAAOD,SAAP;MACD;;IACD;MACE,OAAOJ,KAAP;EAzBJ;AA2BD,CA5BD;;AA8BA,OAAO,IAAIM,qBAAqB,GAAC,OAAK;EACpCJ,IAAI,EAACT;AAD+B,CAAL,CAA1B;AAGP,OAAO,IAAIc,8BAA8B,GAAEC,IAAD,KAAS;EACjDN,IAAI,EAACR,WAD4C;EAChCW,OAAO,EAACG;AADwB,CAAT,CAAnC;AAIP,eAAeT,WAAf"},"metadata":{},"sourceType":"module"}